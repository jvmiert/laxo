// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package translations

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p, ok := messageKeyToIndex[key]
	if !ok {
		return "", false
	}
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"en": &dictionary{index: enIndex, data: enData},
		"vi": &dictionary{index: viIndex, data: viData},
	}
	fallback := language.MustParse("en")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"Email not found":       1,
	"Password is incorrect": 0,
}

var enIndex = []uint32{ // 3 elements
	0x00000000, 0x00000016, 0x00000026,
} // Size: 36 bytes

const enData string = "\x02Password is incorrect\x02Email not found"

var viIndex = []uint32{ // 3 elements
	0x00000000, 0x0000001b, 0x00000034,
} // Size: 36 bytes

const viData string = "" + // Size: 52 bytes
	"\x02Mật khẩu không đúng\x02Không tìm thấy email"

	// Total table size 162 bytes (0KiB); checksum: C27B0BC0
